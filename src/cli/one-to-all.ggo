package "Routing"
purpose ""
usage "compute_ota --graph-file /path/to/graph-file --output-directory /path/to/results-directory --epsilon 0.5 -q src0,src1,..."
description "computes the shortest path tree for each given source node."

args ""

section "input/output files"
option "graph-file" g "path to graph file (of type .fmi or .graph)" string typestr="FILE" required
option "output-directory" o "path to output directory (where the subdirectory with the output files should be created)" string typestr="FILE" default="."

section "triangulation"
option "epsilon" e "Îµ value to use for discretizing the triangulation (if a .graph file is given)" double default="0.0" optional

section "query"
option "query" q "list of source node ids" string multiple
# not implemented
# option "coordinates" - "interpret the pair(s) of source and destination nodes as their coordinates" flag off
# option "stdin" i "indicates that queries should be read from stdin" flag off

section "routing algorithms" sectiondesc="some advanced options on dijkstra search"
option "astar" a "use A* heuristic to speed up one-to-one queries" flag off
option "neighbor-finding" - "the type of algorithm to find neighbors with minimal bending angle" values="param","trig","binary","linear" enum default="param" optional

option "pruning" - "which type of pruning to use for steiner graphs" values="none","prune","prune-min-angle" enum default="prune" optional
option "no-tree" - "if enabled, only computes distances without keeping tree information (does not produce paths)" flag off
